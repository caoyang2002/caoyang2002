<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>公告 on caoyang 2002</title><link>https://caoyang2002.xyz/categories/%E5%85%AC%E5%91%8A/</link><description>Recent content in 公告 on caoyang 2002</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 26 Jan 2025 02:08:55 +0800</lastBuildDate><atom:link href="https://caoyang2002.xyz/categories/%E5%85%AC%E5%91%8A/index.xml" rel="self" type="application/rss+xml"/><item><title>公告</title><link>https://caoyang2002.xyz/post/2024/03/notice/</link><pubDate>Thu, 21 Mar 2024 15:04:05 +0800</pubDate><guid>https://caoyang2002.xyz/post/2024/03/notice/</guid><description>&lt;div class="notice note">这是一个注意事项&lt;/div>

 








&lt;div class="crypto-content">
 
 &lt;div class="crypto-form">
 &lt;input
 type="password"
 placeholder="输入密码"
 class="crypto-input"
 id="crypto-password"
 />
 &lt;button onclick="decrypt()" class="crypto-btn">解密&lt;/button>
 &lt;/div>
 
 &lt;div
 class="encrypted-content"
 id="crypto-output"
 data-content="Cui/meaYr&amp;#43;S4gOS4quWKoOWvhuWGheWuueOAggo="
 >
 已加密，请输入密码
 &lt;/div>
&lt;/div>

&lt;script>
 
 async function decrypt() {
 try {
 const input = document.getElementById('crypto-password');
 const output = document.getElementById('crypto-output');
 const form = document.querySelector('.crypto-form');

 
 if(!input?.value) {
 showError('请输入密码');
 return;
 }

 const password = input.value;
 const publishDate = "505280305";
 const hash = await sha256(password + publishDate);
 const targetHash = await sha256( "公告" + publishDate);

 if(hash !== targetHash) {
 throw new Error('密码错误');
 }

 const base64 = output.getAttribute('data-content');
 const decoder = new TextDecoder();
 const decoded = decoder.decode(Uint8Array.from(atob(base64), c => c.charCodeAt(0)));
 output.innerHTML = decoded;
 console.log(decoded);
 form.style.display = 'none';
 } catch(e) {
 console.log(e)
 showError('密码错误，请重试');
 }
 }

 
 async function sha256(text) {
 const encoder = new TextEncoder();
 const data = encoder.encode(text);
 const hash = await crypto.subtle.digest('SHA-256', data);
 return Array.from(new Uint8Array(hash))
 .map(b => b.toString(16).padStart(2, '0'))
 .join('');
 }

 
 function showError(message) {
 const output = document.getElementById('crypto-output');
 output.textContent = message;
 output.className = 'encrypted-content error-msg';
 }
&lt;/script>

&lt;style>
 .crypto-content {
 margin: 0;
 padding: 0;
 border: 1px solid #ddd;
 border-radius: 4px;
 }
 .crypto-form {
 display: flex;
 gap: 0;
 }
 .crypto-input {
 flex: 1;
 padding: 0;
 margin: 1rem 1rem 0 1rem;
 border: 1px solid #ddd;
 border-radius: 4px;
 }
 .crypto-btn {
 padding: 0.25rem;
 margin: 1rem 1rem 0 1rem;
 background: #4a4a4a;
 color: white;
 border: none;
 border-radius: 4px;
 cursor: pointer;
 }
 .error-msg {
 color: #ff4444;
 }
 .encrypted-content {
 margin: 0 1rem 1rem 1rem;
 
 word-break: break-all;
 }
&lt;/style>

&lt;div class="protected-content">
 &lt;div class="password-form">
 &lt;input type="password" placeholder="输入访问密码" class="pass-input" />
 &lt;button onclick="decryptContent(this)" class="pass-btn">访问&lt;/button>
 &lt;/div>
 &lt;div
 class="encrypted-content"
 style="display: none"
 data-content="
掩耳盗铃
"
 >&lt;/div>
&lt;/div>
&lt;script>
 function decryptContent(btn) {
 const container = btn.closest(".protected-content");
 const input = container.querySelector(".pass-input");
 const content = container.querySelector(".encrypted-content");

 if (input.value === "123") {
 content.innerHTML = content.dataset.content;
 content.style.display = "block";
 container.querySelector(".password-form").style.display = "none";
 } else {
 alert("密码错误");
 }
 }
&lt;/script>
&lt;style>
 .protected-content {
 border: 1px solid #eee;
 padding: 20px;
 border-radius: 5px;
 }
 .pass-input {
 padding: 8px;
 margin-right: 10px;
 }
 .pass-btn {
 padding: 8px 16px;
 background: #0066cc;
 color: white;
 border: none;
 border-radius: 4px;
 cursor: pointer;
 }
&lt;/style>
&lt;p>&lt;img src="https://caoyang2002.xyz/images/cover/blue.jpg" alt="image">&lt;/p></description></item></channel></rss>